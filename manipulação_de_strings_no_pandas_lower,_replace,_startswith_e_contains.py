# -*- coding: utf-8 -*-
"""Manipulação de strings no Pandas: lower, replace, startswith e contains.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1OsFQWowopwGoOzuWk3t6dS998mfm_aA1

# Gerando dados aleatórios de maneira simples com numpy
"""

import numpy as np
import pandas as pd

np.random.seed(423)

a_buscar = ['classica', 'rock', 'jazz', 'funk', 'pop', 'kpop', 'techno', 'drumnbass']
acessos = np.random.choice(a_buscar, 30000)
todos_acessos = pd.DataFrame(acessos, columns=["URI"])
todos_acessos.URI = '/playlist/' + todos_acessos.URI

paginas = ['/promocao_primeiro_de_abril/compra/plano_basico', '/compra/plano_basico', '/compra/plano_avancado', '/', '/musicas', '/contato']
prob = np.array([1,1,1,10,4,2])
acessos = np.random.choice(paginas, 150000, p = prob/sum(prob))
acessos = pd.DataFrame(acessos, columns=["URI"])
todos_acessos = pd.concat([acessos, todos_acessos])

def zera_ninguem(id):
  if id<=100:
    return None
  return id-100

todos_acessos['Usuario logado'] = (np.random.rand(len(todos_acessos)) * (len(todos_acessos) / 10)).round().astype(int)
todos_acessos['Usuario logado'] = todos_acessos['Usuario logado'].apply(zera_ninguem)

status = [200, 500]
todos_acessos['Status de resposta'] = np.random.choice(status, p = [0.97, 0.03])

todos_acessos = todos_acessos.sample(frac=1)

todos_acessos.head()

todos_acessos['URI'].value_counts()

todos_acessos.to_csv("todos_acessos.csv", index=False)

"""# Lendo os dados e trabalhando exemplos com strings"""

import pandas as pd

dados = pd.read_csv("todos_acessos.csv")
dados.head()

dados.columns

dados.columns.str.lower()

dados.columns.str.lower().str.replace(' ', '_')

dados.columns = dados.columns.str.lower().str.replace(' ', '_')
dados.head()

dados.uri.unique()

dados['comprando'] = dados.uri.str.startswith("/compra")
dados.query("comprando==True").head()

dados.comprando.value_counts()

dados['comprando'] = dados.uri.str.contains("/compra/")
dados.query("comprando==True").head()

dados.comprando.value_counts()